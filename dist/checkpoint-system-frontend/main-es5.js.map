{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/door/door.component.ts","webpack:///src/app/door/door.component.html","webpack:///src/app/door/door.service.ts","webpack:///src/app/door/door.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","DoorComponent","doorService","submitValueBtn","door","roomId","entrance","keyId","sendFormData","onSubmit","entranceChange","DoorService","http","fetchStatus","get","apiUrl","subscribe","next","data","error","providedIn","Door","values","Object","assign","environment","production","bootstrapModule","err","console"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'checkpoint-system-frontend';\n}\n","<div class=\"container\">\n  <app-door></app-door>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { DoorComponent } from './door/door.component';\nimport {FormsModule} from '@angular/forms';\nimport {HttpClientModule} from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DoorComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { DoorService } from './door.service';\nimport { Door } from './door';\n\n@Component({\n  selector: 'app-door',\n  templateUrl: './door.component.html',\n  styleUrls: ['./door.component.css']\n})\nexport class DoorComponent implements OnInit {\n\n  public door: Door;\n  public submitValueBtn = 'Выйти из комнаты';\n\n  constructor(public doorService: DoorService) { }\n\n  ngOnInit(): void {\n    this.door = new Door({\n      roomId: null,\n      entrance: false,\n      keyId: null\n    });\n  }\n\n  entranceChange() {\n    if (this.door.entrance) {\n      this.submitValueBtn = 'Войти в комнату';\n    } else {\n      this.submitValueBtn = 'Выйти из комнаты';\n    }\n  }\n\n  onSubmit(): void {\n    this.doorService.sendFormData(this.door);\n  }\n\n}\n","<div class=\"container h-100\">\n  <div class=\"row h-100 w-100 justify-content-center align-items-center\">\n    <form class=\"col-12 text-center\"  (ngSubmit)=\"onSubmit()\">\n      <!--- Room Id Block --->\n      <div class=\"form-group\">\n        <label for=\"inputRoomId\">Room id: </label>\n        <input type=\"number\"\n               [(ngModel)] = \"door.roomId\"\n               name=\"roomId\"\n               id=\"inputRoomId\"\n               placeholder=\"Room id\">\n      </div>\n      <!--- Key Id Block --->\n      <div class=\"form-group\">\n        <label for=\"inputKeyId\" >Key id: </label>\n        <input type=\"number\"\n               [(ngModel)] = \"door.keyId\"\n               name=\"keyId\"\n               id=\"inputKeyId\"\n               placeholder=\"Key id\">\n      </div>\n      <!--- Entrance Block --->\n      <div class=\"form-group\">\n        <label for=\"inputEntrance\">Entrance: </label>\n        <input type=\"checkbox\"\n               [(ngModel)] = \"door.entrance\"\n               (change)=\"entranceChange()\"\n               name=\"entrance\"\n               id=\"inputEntrance\">\n      </div>\n      {{ doorService.fetchStatus }}\n      <!--- Buttons Block --->\n      <div class=\"form-group\">\n        <button type=\"submit\" class=\"btn btn-primary\">{{ submitValueBtn }}</button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport {Door} from './door';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DoorService {\n\n\n  public fetchStatus: string = null;\n\n  constructor(private http: HttpClient) { }\n\n  sendFormData(door: Door): void {\n    this.http.get<any>(`http://${environment.apiUrl}/check?roomId=${door.roomId}&entrance=${door.entrance}&keyId=${door.keyId}`).subscribe({\n      next: data => {\n        if (door.entrance && data) {\n          this.fetchStatus = 'User success enter in room ' + door.roomId;\n        }\n        if (!door.entrance && data) {\n          this.fetchStatus = 'User success exit in room ' + door.roomId;\n        }\n      },\n      error: error => {\n        this.fetchStatus = 'Error: ' + error.error;\n      }\n    });\n  }\n\n}\n","export class Door {\r\n\r\n  roomId: number;\r\n  entrance: boolean;\r\n  keyId: number;\r\n\r\n\r\n  constructor(values: object = {}) {\r\n    Object.assign(this, values);\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'localhost:8080'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}