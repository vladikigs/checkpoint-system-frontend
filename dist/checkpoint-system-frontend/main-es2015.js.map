{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/door/door.component.ts","./src/app/door/door.component.html","./src/app/door/door.service.ts","./src/app/door/door.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'checkpoint-system-frontend';\n}\n","<div class=\"container\">\n  <app-door></app-door>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { DoorComponent } from './door/door.component';\nimport {FormsModule} from '@angular/forms';\nimport {HttpClientModule} from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DoorComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { DoorService } from './door.service';\nimport { Door } from './door';\n\n@Component({\n  selector: 'app-door',\n  templateUrl: './door.component.html',\n  styleUrls: ['./door.component.css']\n})\nexport class DoorComponent implements OnInit {\n\n  public door: Door;\n  public submitValueBtn = 'Выйти из комнаты';\n\n  constructor(public doorService: DoorService) { }\n\n  ngOnInit(): void {\n    this.door = new Door({\n      roomId: null,\n      entrance: false,\n      keyId: null\n    });\n  }\n\n  entranceChange() {\n    if (this.door.entrance) {\n      this.submitValueBtn = 'Войти в комнату';\n    } else {\n      this.submitValueBtn = 'Выйти из комнаты';\n    }\n  }\n\n  onSubmit(): void {\n    this.doorService.sendFormData(this.door);\n  }\n\n}\n","<div class=\"container h-100\">\n  <div class=\"row h-100 w-100 justify-content-center align-items-center\">\n    <form class=\"col-12 text-center\"  (ngSubmit)=\"onSubmit()\">\n      <!--- Room Id Block --->\n      <div class=\"form-group\">\n        <label for=\"inputRoomId\">Room id: </label>\n        <input type=\"number\"\n               [(ngModel)] = \"door.roomId\"\n               name=\"roomId\"\n               id=\"inputRoomId\"\n               placeholder=\"Room id\">\n      </div>\n      <!--- Key Id Block --->\n      <div class=\"form-group\">\n        <label for=\"inputKeyId\" >Key id: </label>\n        <input type=\"number\"\n               [(ngModel)] = \"door.keyId\"\n               name=\"keyId\"\n               id=\"inputKeyId\"\n               placeholder=\"Key id\">\n      </div>\n      <!--- Entrance Block --->\n      <div class=\"form-group\">\n        <label for=\"inputEntrance\">Entrance: </label>\n        <input type=\"checkbox\"\n               [(ngModel)] = \"door.entrance\"\n               (change)=\"entranceChange()\"\n               name=\"entrance\"\n               id=\"inputEntrance\">\n      </div>\n      {{ doorService.fetchStatus }}\n      <!--- Buttons Block --->\n      <div class=\"form-group\">\n        <button type=\"submit\" class=\"btn btn-primary\">{{ submitValueBtn }}</button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport {Door} from './door';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DoorService {\n\n\n  public fetchStatus: string = null;\n\n  constructor(private http: HttpClient) { }\n\n  sendFormData(door: Door): void {\n    this.http.get<any>(`http://${environment.apiUrl}/check?roomId=${door.roomId}&entrance=${door.entrance}&keyId=${door.keyId}`).subscribe({\n      next: data => {\n        if (door.entrance && data) {\n          this.fetchStatus = 'User success enter in room ' + door.roomId;\n        }\n        if (!door.entrance && data) {\n          this.fetchStatus = 'User success exit in room ' + door.roomId;\n        }\n      },\n      error: error => {\n        this.fetchStatus = 'Error: ' + error.error;\n      }\n    });\n  }\n\n}\n","export class Door {\r\n\r\n  roomId: number;\r\n  entrance: boolean;\r\n  keyId: number;\r\n\r\n\r\n  constructor(values: object = {}) {\r\n    Object.assign(this, values);\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'localhost:8080'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}